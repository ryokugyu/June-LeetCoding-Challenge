//DP solution
class Solution {
    
    static int count(int[] coins, int array_size, int amount){
        int[] table = new int[amount+1];
        
        Arrays.fill(table,0);

        table[0]=1;
        for(int i=0;i<array_size;i++){
            for(int j=coins[i];j<=amount;j++)
                table[j]+=table[j-coins[i]];
        }
        
        return table[amount];
    }
    
    public int change(int amount,int[] coins) {
        return count(coins, coins.length, amount);
    }
}
--------------------------------------------------------

// Greedy Approach- but TLE occur

class Solution {
    
    static int count(int[] coins, int array_size, int amount){
                
        if(amount ==0)
            return 1;
        
        if(amount<0)
            return 0;
        
        if(array_size<=0 && amount>=1)
            return 0;
        
        return count(coins, array_size-1, amount) + count(coins, array_size, amount-coins[array_size-1]);
        
    }
    
    public int change(int amount,int[] coins) {
        int m = coins.length;
        return count(coins, coins.length, amount);
    }
}
